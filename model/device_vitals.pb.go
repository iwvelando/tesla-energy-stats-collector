// Tesla Protocol Buffer definition (tesla.proto)
//
// Create device_vitals.pb.go for use in projects using the protoc compiler:
//     protoc --go_out=. tesla.proto
//
// Credit and thanks to @brianhealey

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.2
// source: device_vitals.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceVital struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Types that are assignable to Value:
	//	*DeviceVital_IntValue
	//	*DeviceVital_FloatValue
	//	*DeviceVital_StringValue
	//	*DeviceVital_BoolValue
	Value isDeviceVital_Value `protobuf_oneof:"value"`
}

func (x *DeviceVital) Reset() {
	*x = DeviceVital{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceVital) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceVital) ProtoMessage() {}

func (x *DeviceVital) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceVital.ProtoReflect.Descriptor instead.
func (*DeviceVital) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceVital) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (m *DeviceVital) GetValue() isDeviceVital_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DeviceVital) GetIntValue() int64 {
	if x, ok := x.GetValue().(*DeviceVital_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *DeviceVital) GetFloatValue() float64 {
	if x, ok := x.GetValue().(*DeviceVital_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *DeviceVital) GetStringValue() string {
	if x, ok := x.GetValue().(*DeviceVital_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *DeviceVital) GetBoolValue() bool {
	if x, ok := x.GetValue().(*DeviceVital_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

type isDeviceVital_Value interface {
	isDeviceVital_Value()
}

type DeviceVital_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=intValue,proto3,oneof"`
}

type DeviceVital_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,4,opt,name=floatValue,proto3,oneof"`
}

type DeviceVital_StringValue struct {
	StringValue string `protobuf:"bytes,5,opt,name=stringValue,proto3,oneof"`
}

type DeviceVital_BoolValue struct {
	BoolValue bool `protobuf:"varint,6,opt,name=boolValue,proto3,oneof"`
}

func (*DeviceVital_IntValue) isDeviceVital_Value() {}

func (*DeviceVital_FloatValue) isDeviceVital_Value() {}

func (*DeviceVital_StringValue) isDeviceVital_Value() {}

func (*DeviceVital_BoolValue) isDeviceVital_Value() {}

type StringValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{1}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UInt32Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UInt32Value) Reset() {
	*x = UInt32Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt32Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt32Value) ProtoMessage() {}

func (x *UInt32Value) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt32Value.ProtoReflect.Descriptor instead.
func (*UInt32Value) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{2}
}

func (x *UInt32Value) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ConnectionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress  *string `protobuf:"bytes,1,opt,name=ipAddress,proto3,oneof" json:"ipAddress,omitempty"`
	SerialPort *string `protobuf:"bytes,2,opt,name=serialPort,proto3,oneof" json:"serialPort,omitempty"`
	SerialBaud *string `protobuf:"bytes,3,opt,name=serialBaud,proto3,oneof" json:"serialBaud,omitempty"`
	ModbusId   *uint32 `protobuf:"varint,4,opt,name=modbusId,proto3,oneof" json:"modbusId,omitempty"`
}

func (x *ConnectionParameters) Reset() {
	*x = ConnectionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionParameters) ProtoMessage() {}

func (x *ConnectionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionParameters.ProtoReflect.Descriptor instead.
func (*ConnectionParameters) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectionParameters) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *ConnectionParameters) GetSerialPort() string {
	if x != nil && x.SerialPort != nil {
		return *x.SerialPort
	}
	return ""
}

func (x *ConnectionParameters) GetSerialBaud() string {
	if x != nil && x.SerialBaud != nil {
		return *x.SerialBaud
	}
	return ""
}

func (x *ConnectionParameters) GetModbusId() uint32 {
	if x != nil && x.ModbusId != nil {
		return *x.ModbusId
	}
	return 0
}

type TeslaHardwareId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PcbaId     *UInt32Value `protobuf:"bytes,1,opt,name=pcbaId,proto3,oneof" json:"pcbaId,omitempty"`
	AssemblyId *UInt32Value `protobuf:"bytes,2,opt,name=assemblyId,proto3,oneof" json:"assemblyId,omitempty"`
	UsageId    *UInt32Value `protobuf:"bytes,3,opt,name=usageId,proto3,oneof" json:"usageId,omitempty"`
}

func (x *TeslaHardwareId) Reset() {
	*x = TeslaHardwareId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeslaHardwareId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeslaHardwareId) ProtoMessage() {}

func (x *TeslaHardwareId) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeslaHardwareId.ProtoReflect.Descriptor instead.
func (*TeslaHardwareId) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{4}
}

func (x *TeslaHardwareId) GetPcbaId() *UInt32Value {
	if x != nil {
		return x.PcbaId
	}
	return nil
}

func (x *TeslaHardwareId) GetAssemblyId() *UInt32Value {
	if x != nil {
		return x.AssemblyId
	}
	return nil
}

func (x *TeslaHardwareId) GetUsageId() *UInt32Value {
	if x != nil {
		return x.UsageId
	}
	return nil
}

type TeslaEnergyEcuAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcuType    *int32           `protobuf:"varint,1,opt,name=ecuType,proto3,oneof" json:"ecuType,omitempty"`
	HardwareId *TeslaHardwareId `protobuf:"bytes,2,opt,name=hardwareId,proto3,oneof" json:"hardwareId,omitempty"`
}

func (x *TeslaEnergyEcuAttributes) Reset() {
	*x = TeslaEnergyEcuAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeslaEnergyEcuAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeslaEnergyEcuAttributes) ProtoMessage() {}

func (x *TeslaEnergyEcuAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeslaEnergyEcuAttributes.ProtoReflect.Descriptor instead.
func (*TeslaEnergyEcuAttributes) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{5}
}

func (x *TeslaEnergyEcuAttributes) GetEcuType() int32 {
	if x != nil && x.EcuType != nil {
		return *x.EcuType
	}
	return 0
}

func (x *TeslaEnergyEcuAttributes) GetHardwareId() *TeslaHardwareId {
	if x != nil {
		return x.HardwareId
	}
	return nil
}

type GeneratorAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameplateRealPowerW      *uint64 `protobuf:"varint,1,opt,name=nameplateRealPowerW,proto3,oneof" json:"nameplateRealPowerW,omitempty"`
	NameplateApparentPowerVa *uint64 `protobuf:"varint,2,opt,name=nameplateApparentPowerVa,proto3,oneof" json:"nameplateApparentPowerVa,omitempty"`
}

func (x *GeneratorAttributes) Reset() {
	*x = GeneratorAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratorAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratorAttributes) ProtoMessage() {}

func (x *GeneratorAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratorAttributes.ProtoReflect.Descriptor instead.
func (*GeneratorAttributes) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{6}
}

func (x *GeneratorAttributes) GetNameplateRealPowerW() uint64 {
	if x != nil && x.NameplateRealPowerW != nil {
		return *x.NameplateRealPowerW
	}
	return 0
}

func (x *GeneratorAttributes) GetNameplateApparentPowerVa() uint64 {
	if x != nil && x.NameplateApparentPowerVa != nil {
		return *x.NameplateApparentPowerVa
	}
	return 0
}

type PVInverterAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameplateRealPowerW *uint64 `protobuf:"varint,1,opt,name=nameplateRealPowerW,proto3,oneof" json:"nameplateRealPowerW,omitempty"`
}

func (x *PVInverterAttributes) Reset() {
	*x = PVInverterAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVInverterAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVInverterAttributes) ProtoMessage() {}

func (x *PVInverterAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVInverterAttributes.ProtoReflect.Descriptor instead.
func (*PVInverterAttributes) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{7}
}

func (x *PVInverterAttributes) GetNameplateRealPowerW() uint64 {
	if x != nil && x.NameplateRealPowerW != nil {
		return *x.NameplateRealPowerW
	}
	return 0
}

type MeterAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterLocation []uint32 `protobuf:"varint,1,rep,packed,name=meterLocation,proto3" json:"meterLocation,omitempty"`
}

func (x *MeterAttributes) Reset() {
	*x = MeterAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterAttributes) ProtoMessage() {}

func (x *MeterAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterAttributes.ProtoReflect.Descriptor instead.
func (*MeterAttributes) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{8}
}

func (x *MeterAttributes) GetMeterLocation() []uint32 {
	if x != nil {
		return x.MeterLocation
	}
	return nil
}

type DeviceAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DeviceAttributes:
	//	*DeviceAttributes_TeslaEnergyEcuAttributes
	//	*DeviceAttributes_GeneratorAttributes
	//	*DeviceAttributes_PvInverterAttributes
	//	*DeviceAttributes_MeterAttributes
	DeviceAttributes isDeviceAttributes_DeviceAttributes `protobuf_oneof:"deviceAttributes"`
}

func (x *DeviceAttributes) Reset() {
	*x = DeviceAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAttributes) ProtoMessage() {}

func (x *DeviceAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAttributes.ProtoReflect.Descriptor instead.
func (*DeviceAttributes) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{9}
}

func (m *DeviceAttributes) GetDeviceAttributes() isDeviceAttributes_DeviceAttributes {
	if m != nil {
		return m.DeviceAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetTeslaEnergyEcuAttributes() *TeslaEnergyEcuAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_TeslaEnergyEcuAttributes); ok {
		return x.TeslaEnergyEcuAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetGeneratorAttributes() *GeneratorAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_GeneratorAttributes); ok {
		return x.GeneratorAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetPvInverterAttributes() *PVInverterAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_PvInverterAttributes); ok {
		return x.PvInverterAttributes
	}
	return nil
}

func (x *DeviceAttributes) GetMeterAttributes() *MeterAttributes {
	if x, ok := x.GetDeviceAttributes().(*DeviceAttributes_MeterAttributes); ok {
		return x.MeterAttributes
	}
	return nil
}

type isDeviceAttributes_DeviceAttributes interface {
	isDeviceAttributes_DeviceAttributes()
}

type DeviceAttributes_TeslaEnergyEcuAttributes struct {
	TeslaEnergyEcuAttributes *TeslaEnergyEcuAttributes `protobuf:"bytes,1,opt,name=teslaEnergyEcuAttributes,proto3,oneof"`
}

type DeviceAttributes_GeneratorAttributes struct {
	GeneratorAttributes *GeneratorAttributes `protobuf:"bytes,2,opt,name=generatorAttributes,proto3,oneof"`
}

type DeviceAttributes_PvInverterAttributes struct {
	PvInverterAttributes *PVInverterAttributes `protobuf:"bytes,3,opt,name=pvInverterAttributes,proto3,oneof"`
}

type DeviceAttributes_MeterAttributes struct {
	MeterAttributes *MeterAttributes `protobuf:"bytes,4,opt,name=meterAttributes,proto3,oneof"`
}

func (*DeviceAttributes_TeslaEnergyEcuAttributes) isDeviceAttributes_DeviceAttributes() {}

func (*DeviceAttributes_GeneratorAttributes) isDeviceAttributes_DeviceAttributes() {}

func (*DeviceAttributes_PvInverterAttributes) isDeviceAttributes_DeviceAttributes() {}

func (*DeviceAttributes_MeterAttributes) isDeviceAttributes_DeviceAttributes() {}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Din                    *StringValue           `protobuf:"bytes,1,opt,name=din,proto3,oneof" json:"din,omitempty"`
	PartNumber             *StringValue           `protobuf:"bytes,2,opt,name=partNumber,proto3,oneof" json:"partNumber,omitempty"`
	SerialNumber           *StringValue           `protobuf:"bytes,3,opt,name=serialNumber,proto3,oneof" json:"serialNumber,omitempty"`
	Manufacturer           *StringValue           `protobuf:"bytes,4,opt,name=manufacturer,proto3,oneof" json:"manufacturer,omitempty"`
	SiteLabel              *StringValue           `protobuf:"bytes,5,opt,name=siteLabel,proto3,oneof" json:"siteLabel,omitempty"`
	ComponentParentDin     *StringValue           `protobuf:"bytes,6,opt,name=componentParentDin,proto3,oneof" json:"componentParentDin,omitempty"`
	FirmwareVersion        *StringValue           `protobuf:"bytes,7,opt,name=firmwareVersion,proto3,oneof" json:"firmwareVersion,omitempty"`
	FirstCommunicationTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=firstCommunicationTime,proto3,oneof" json:"firstCommunicationTime,omitempty"`
	LastCommunicationTime  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=lastCommunicationTime,proto3,oneof" json:"lastCommunicationTime,omitempty"`
	ConnectionParameters   *ConnectionParameters  `protobuf:"bytes,10,opt,name=connectionParameters,proto3,oneof" json:"connectionParameters,omitempty"`
	DeviceAttributes       []*DeviceAttributes    `protobuf:"bytes,11,rep,name=deviceAttributes,proto3" json:"deviceAttributes,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{10}
}

func (x *Device) GetDin() *StringValue {
	if x != nil {
		return x.Din
	}
	return nil
}

func (x *Device) GetPartNumber() *StringValue {
	if x != nil {
		return x.PartNumber
	}
	return nil
}

func (x *Device) GetSerialNumber() *StringValue {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

func (x *Device) GetManufacturer() *StringValue {
	if x != nil {
		return x.Manufacturer
	}
	return nil
}

func (x *Device) GetSiteLabel() *StringValue {
	if x != nil {
		return x.SiteLabel
	}
	return nil
}

func (x *Device) GetComponentParentDin() *StringValue {
	if x != nil {
		return x.ComponentParentDin
	}
	return nil
}

func (x *Device) GetFirmwareVersion() *StringValue {
	if x != nil {
		return x.FirmwareVersion
	}
	return nil
}

func (x *Device) GetFirstCommunicationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstCommunicationTime
	}
	return nil
}

func (x *Device) GetLastCommunicationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCommunicationTime
	}
	return nil
}

func (x *Device) GetConnectionParameters() *ConnectionParameters {
	if x != nil {
		return x.ConnectionParameters
	}
	return nil
}

func (x *Device) GetDeviceAttributes() []*DeviceAttributes {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

type SiteControllerConnectedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3,oneof" json:"device,omitempty"`
}

func (x *SiteControllerConnectedDevice) Reset() {
	*x = SiteControllerConnectedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteControllerConnectedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteControllerConnectedDevice) ProtoMessage() {}

func (x *SiteControllerConnectedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteControllerConnectedDevice.ProtoReflect.Descriptor instead.
func (*SiteControllerConnectedDevice) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{11}
}

func (x *SiteControllerConnectedDevice) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type SiteControllerConnectedDeviceWithVitals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device []*SiteControllerConnectedDevice `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty"`
	Vitals []*DeviceVital                   `protobuf:"bytes,2,rep,name=vitals,proto3" json:"vitals,omitempty"`
	Alerts []string                         `protobuf:"bytes,3,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *SiteControllerConnectedDeviceWithVitals) Reset() {
	*x = SiteControllerConnectedDeviceWithVitals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteControllerConnectedDeviceWithVitals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteControllerConnectedDeviceWithVitals) ProtoMessage() {}

func (x *SiteControllerConnectedDeviceWithVitals) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteControllerConnectedDeviceWithVitals.ProtoReflect.Descriptor instead.
func (*SiteControllerConnectedDeviceWithVitals) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{12}
}

func (x *SiteControllerConnectedDeviceWithVitals) GetDevice() []*SiteControllerConnectedDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *SiteControllerConnectedDeviceWithVitals) GetVitals() []*DeviceVital {
	if x != nil {
		return x.Vitals
	}
	return nil
}

func (x *SiteControllerConnectedDeviceWithVitals) GetAlerts() []string {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type DevicesWithVitals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*SiteControllerConnectedDeviceWithVitals `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *DevicesWithVitals) Reset() {
	*x = DevicesWithVitals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_vitals_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevicesWithVitals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicesWithVitals) ProtoMessage() {}

func (x *DevicesWithVitals) ProtoReflect() protoreflect.Message {
	mi := &file_device_vitals_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicesWithVitals.ProtoReflect.Descriptor instead.
func (*DevicesWithVitals) Descriptor() ([]byte, []int) {
	return file_device_vitals_proto_rawDescGZIP(), []int{13}
}

func (x *DevicesWithVitals) GetDevices() []*SiteControllerConnectedDeviceWithVitals {
	if x != nil {
		return x.Devices
	}
	return nil
}

var File_device_vitals_proto protoreflect.FileDescriptor

var file_device_vitals_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a,
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x22, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xdd, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x75, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x61,
	0x75, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x62, 0x75,
	0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50,
	0x6f, 0x72, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x61,
	0x75, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x49, 0x64, 0x22,
	0xc2, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x63, 0x62, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x70, 0x63, 0x62, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x01, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x07, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x02, 0x52, 0x07, 0x75, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x70, 0x63, 0x62, 0x61, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x63, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x65, 0x63, 0x75, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x35, 0x0a, 0x0a, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x49, 0x64, 0x48, 0x01, 0x52, 0x0a, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x63, 0x75, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x13, 0x6e, 0x61,
	0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x57, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x88, 0x01,
	0x01, 0x12, 0x3f, 0x0a, 0x18, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x18, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x88,
	0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x56, 0x61, 0x22, 0x65, 0x0a, 0x14, 0x50, 0x56, 0x49, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x13,
	0x6e, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x57, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x22, 0x37,
	0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x02, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x18,
	0x74, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x18, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x63, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x13, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x14, 0x70, 0x76, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x50, 0x56, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x14, 0x70, 0x76, 0x49, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xfe,
	0x06, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x64, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x64, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x03, 0x52, 0x0c,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x04, 0x52, 0x09, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x41, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x44, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x05, 0x52, 0x12, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x06, 0x52, 0x0f, 0x66, 0x69,
	0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x57, 0x0a, 0x16, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x07, 0x52, 0x16,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x08, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x4e, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x10, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x64, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x74,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x6e, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x50, 0x0a, 0x1d, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x9f, 0x01, 0x0a, 0x27, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x36, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x69,
	0x74, 0x61, 0x6c, 0x52, 0x06, 0x76, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x56, 0x69, 0x74, 0x61, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x53, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x56, 0x69, 0x74,
	0x61, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x77, 0x76, 0x65, 0x6c,
	0x61, 0x6e, 0x64, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x2d, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_vitals_proto_rawDescOnce sync.Once
	file_device_vitals_proto_rawDescData = file_device_vitals_proto_rawDesc
)

func file_device_vitals_proto_rawDescGZIP() []byte {
	file_device_vitals_proto_rawDescOnce.Do(func() {
		file_device_vitals_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_vitals_proto_rawDescData)
	})
	return file_device_vitals_proto_rawDescData
}

var file_device_vitals_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_device_vitals_proto_goTypes = []interface{}{
	(*DeviceVital)(nil),                             // 0: DeviceVital
	(*StringValue)(nil),                             // 1: StringValue
	(*UInt32Value)(nil),                             // 2: UInt32Value
	(*ConnectionParameters)(nil),                    // 3: ConnectionParameters
	(*TeslaHardwareId)(nil),                         // 4: TeslaHardwareId
	(*TeslaEnergyEcuAttributes)(nil),                // 5: TeslaEnergyEcuAttributes
	(*GeneratorAttributes)(nil),                     // 6: GeneratorAttributes
	(*PVInverterAttributes)(nil),                    // 7: PVInverterAttributes
	(*MeterAttributes)(nil),                         // 8: MeterAttributes
	(*DeviceAttributes)(nil),                        // 9: DeviceAttributes
	(*Device)(nil),                                  // 10: Device
	(*SiteControllerConnectedDevice)(nil),           // 11: SiteControllerConnectedDevice
	(*SiteControllerConnectedDeviceWithVitals)(nil), // 12: SiteControllerConnectedDeviceWithVitals
	(*DevicesWithVitals)(nil),                       // 13: DevicesWithVitals
	(*timestamppb.Timestamp)(nil),                   // 14: google.protobuf.Timestamp
}
var file_device_vitals_proto_depIdxs = []int32{
	2,  // 0: TeslaHardwareId.pcbaId:type_name -> UInt32Value
	2,  // 1: TeslaHardwareId.assemblyId:type_name -> UInt32Value
	2,  // 2: TeslaHardwareId.usageId:type_name -> UInt32Value
	4,  // 3: TeslaEnergyEcuAttributes.hardwareId:type_name -> TeslaHardwareId
	5,  // 4: DeviceAttributes.teslaEnergyEcuAttributes:type_name -> TeslaEnergyEcuAttributes
	6,  // 5: DeviceAttributes.generatorAttributes:type_name -> GeneratorAttributes
	7,  // 6: DeviceAttributes.pvInverterAttributes:type_name -> PVInverterAttributes
	8,  // 7: DeviceAttributes.meterAttributes:type_name -> MeterAttributes
	1,  // 8: Device.din:type_name -> StringValue
	1,  // 9: Device.partNumber:type_name -> StringValue
	1,  // 10: Device.serialNumber:type_name -> StringValue
	1,  // 11: Device.manufacturer:type_name -> StringValue
	1,  // 12: Device.siteLabel:type_name -> StringValue
	1,  // 13: Device.componentParentDin:type_name -> StringValue
	1,  // 14: Device.firmwareVersion:type_name -> StringValue
	14, // 15: Device.firstCommunicationTime:type_name -> google.protobuf.Timestamp
	14, // 16: Device.lastCommunicationTime:type_name -> google.protobuf.Timestamp
	3,  // 17: Device.connectionParameters:type_name -> ConnectionParameters
	9,  // 18: Device.deviceAttributes:type_name -> DeviceAttributes
	10, // 19: SiteControllerConnectedDevice.device:type_name -> Device
	11, // 20: SiteControllerConnectedDeviceWithVitals.device:type_name -> SiteControllerConnectedDevice
	0,  // 21: SiteControllerConnectedDeviceWithVitals.vitals:type_name -> DeviceVital
	12, // 22: DevicesWithVitals.devices:type_name -> SiteControllerConnectedDeviceWithVitals
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_device_vitals_proto_init() }
func file_device_vitals_proto_init() {
	if File_device_vitals_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_vitals_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceVital); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt32Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeslaHardwareId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeslaEnergyEcuAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratorAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PVInverterAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteControllerConnectedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteControllerConnectedDeviceWithVitals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_vitals_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevicesWithVitals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_device_vitals_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DeviceVital_IntValue)(nil),
		(*DeviceVital_FloatValue)(nil),
		(*DeviceVital_StringValue)(nil),
		(*DeviceVital_BoolValue)(nil),
	}
	file_device_vitals_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_device_vitals_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_device_vitals_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_device_vitals_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_device_vitals_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_device_vitals_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*DeviceAttributes_TeslaEnergyEcuAttributes)(nil),
		(*DeviceAttributes_GeneratorAttributes)(nil),
		(*DeviceAttributes_PvInverterAttributes)(nil),
		(*DeviceAttributes_MeterAttributes)(nil),
	}
	file_device_vitals_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_device_vitals_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_vitals_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_device_vitals_proto_goTypes,
		DependencyIndexes: file_device_vitals_proto_depIdxs,
		MessageInfos:      file_device_vitals_proto_msgTypes,
	}.Build()
	File_device_vitals_proto = out.File
	file_device_vitals_proto_rawDesc = nil
	file_device_vitals_proto_goTypes = nil
	file_device_vitals_proto_depIdxs = nil
}
